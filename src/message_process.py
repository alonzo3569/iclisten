from struct import pack, unpack


msg=b'2*\x00X'#A\x00\x00\x0c^cW\xff\x00\x00\x00\x05\x0fQ\x90\x00D\x00\x00\x08\x05\x02\x02\x08\x07-\xf9RC\x00\x00\x14\x01\x1e\x01Hc\x03\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00E\x00\x00\x08\x00\x01\xf4\x00\x00\x00\x83\xffG\x00\x00\x14\x00\x01\x00\x03\x00\x7f\xff\xff\xff\x80\x00\x00\x00-\xc6\xc0\xff\xd29@1*\x05\xb0A\x00\x00\x0c^cW\xff\x00\x00\x00\x05\x0fQ\x90\x00B\x00\x05\x9c\x00\x00\x00\x00\x01\x83\x01\xdc\xc8\x06\x00\xfc\x06\x00\xf8\x06\x00\xaf\x06\x00\xe0\x06\x00\xd4\x06\x00\xb6\x06\x00\xcd\x06\x00\xaa\x06\x00T\x06\x00\x18\x06\x00\x04\x06\x00H\x06\x00\x7f\x06\x00h\x06\x00\x8d\x06\x00%\x06\x00\x04\x06\x00\x8d\x06\x00\t\x06\x00\x01\x06\x00M\x06\x00\xba\x05\x00\xd8\x05\x00\xe0\x05\x00\x9a\x05\x00\xa2\x05\x00h\x05\x00\xbd\x05\x00\xbe\x05\x00P\x05\x00\x94\x05\x00B\x05\x00\x0f\x05\x00\x8a\x05\x00u\x05\x00I\x05\x00%\x05\x00\xea\x04\x00\xfe\x04\x00\xf0\x04\x00\xc7\x04\x00\xed\x04\x00\xff\x04\x00\xa1\x04\x00\x96\x04\x00\xde\x04\x00\xb8\x04\x00\xb3\x04\x00\xcb\x04\x00T\x04\x00 \x04\x00\x91\x04\x00P\x04\x00\xf6\x03\x00J\x04\x00\x1c\x04\x00\xe7\x03\x00\xe3\x03\x00\xbb\x03\x00\xed\x03\x00\xf4\x03\x00\xca\x03\x00\xab\x03\x00\x8c\x03\x00u\x03\x00<\x03\x00T\x03\x00(\x03\x00\xa7\x02\x00\xf8\x02\x00K\x03\x00\xfe\x02\x00\xc3\x02\x00\xbc\x02\x00{\x02\x002\x02\x00_\x02\x00_\x02\x00D\x02\x00S\x02\x00I\x02\x007\x02\x00\xc7\x01\x00\xbc\x01\x00(\x02\x00\x04\x02\x00\xf0\x01\x00\xf0\x01\x00\xba\x01\x00\xd2\x01\x00\xb4\x01\x00\x82\x01\x00\x9a\x01\x00N\x01\x00#\x01\x00\x86\x01\x00~\x01\x00\xfb\x00\x00\x10\x01\x00C\x01\x00\xcb\x00\x00\xe3\x00\x00\x17\x01\x00\x8d\x00\x00\x84\x00\x00\xb8\x00\x00\xb8\x00\x00\xd0\x00\x00\xaa\x00\x00\x9b\x00\x00|\x00\x00L\x00\x00h\x00\x00)\x00\x00\x08\x00\x00>\x00\x00%\x00\x00\r\x00\x00\xea\xff\xff\xdf\xff\xff\xde\xff\xff\xb6\xff\xff\xf6\xff\xff\xff\xff\xff\x8e\xff\xff\x81\xff\xff\xae\xff\xff\xc9\xff\xff\x90\xff\xffK\xff\xffv\xff\xff\x83\xff\xffm\xff\xffI\xff\xffU\xff\xff{\xff\xff\x1f\xff\xff\xf9\xfe\xff\x08\xff\xff\xef\xfe\xff\xf5\xfe\xff\xa7\xfe\xff`\xfe\xff\x9d\xfe\xff\x84\xfe\xffD\xfe\xff\x94\xfe\xff\x93\xfe\xff\x08\xfe\xff\xeb\xfd\xff.\xfe\xff1\xfe\xff\x04\xfe\xff\xee\xfd\xff\xf5\xfd\xff\xdd\xfd\xff\x84\xfd\xff\x8f\xfd\xff\xdd\xfd\xffs\xfd\xff9\xfd\xffb\xfd\xff.\xfd\xffM\xfd\xffZ\xfd\xff%\xfd\xfff\xfd\xffJ\xfd\xff6\xfd\xff\xad\xfd\xff_\xfd\xff\xf5\xfc\xff\xe1\xfc\xff\xd0\xfc\xff?\xfd\xff2\xfd\xff\xdc\xfc\xff\xfc\xfc\xff\xc1\xfc\xff\xca\xfc\xff\x10\xfd\xff"\xfd\xff1\xfd\xff\xe6\xfc\xff\xfb\xfc\xff\xbc\xfc\xff\x92\xfc\xff,\xfd\xff\xb4\xfc\xff\x8d\xfc\xff\xd7\xfc\xffN\xfc\xffU\xfc\xff\x8a\xfc\xff{\xfc\xff\x8a\xfc\xff\x97\xfc\xff\xa3\xfc\xffx\xfc\xff(\xfc\xff\xe0\xfb\xff\xf1\xfb\xff\x04\xfc\xff\xb0\xfb\xff\x8a\xfb\xff\x8b\xfb\xff\xaf\xfb\xff\x96\xfb\xff2\xfb\xffi\xfb\xffE\xfb\xff\xf5\xfa\xff_\xfb\xffR\xfb\xff\xe8\xfa\xff\xd5\xfa\xff\xf5\xfa\xff\xe6\xfa\xff\x9c\xfa\xff\xc8\xfa\xff\xc7\xfa\xff\x9b\xfa\xff\xc8\xfa\xff\x9b\xfa\xffl\xfa\xffR\xfa\xff=\xfa\xff2\xfa\xff4\xfa\xfft\xfa\xff;\xfa\xff\xe1\xf9\xff\xf0\xf9\xff\xe2\xf9\xff\xc7\xf9\xff\xd6\xf9\xff\x0f\xfa\xff&\xfa\xff\x05\xfa\xff"\xfa\xff?\xfa\xff\xf5\xf9\xff\x9c\xf9\xff\xe9\xf9\xff+\xfa\xff\xc3\xf9\xff\xd9\xf9\xff/\xfa\xff\xe0\xf9\xff\x96\xf9\xff\xc8\xf9\xff\xfe\xf9\xff\xdb\xf9\xff\xbf\xf9\xff\xef\xf9\xff\xfb\xf9\xff\xc3\xf9\xff\x10\xfa\xffQ\xfa\xff\x15\xfa\xfff\xfa\xff\x9b\xfa\xffS\xfa\xff\xf2\xf9\xff\xbe\xf9\xff\x07\xfa\xff\xfd\xf9\xff\xdc\xf9\xffS\xfa\xff\x8d\xfa\xff7\xfa\xff\x1a\xfa\xff\x0f\xfa\xff\xc6\xf9\xff\xd9\xf9\xff\xcd\xf9\xff\x8c\xf9\xff\xb6\xf9\xff\xd8\xf9\xff\xd9\xf9\xffx\xf9\xffS\xf9\xff\xe7\xf9\xff\xa4\xf9\xffd\xf9\xff\xa9\xf9\xff\x1e\xf9\xff\n\xf9\xffO\xf9\xff3\xf9\xffp\xf9\xffu\xf9\xffd\xf9\xff$\xf9\xff\x07\xf9\xff~\xf9\xffV\xf9\xff"\xf9\xff%\xf9\xff'

msg_two=b'2*\x00XA\x00\x00\x0c^cY@\x00\x00\x00\x05\x11\xc4\x84\x00D\x00\x00\x08\x05\x02\x02\x08\x07-\xf9RC\x00\x00\x14\x01\x1e\x01Hc\x03\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00E\x00\x00\x08\x00\x01\xf4\x00\x00\x00\x83\x00G\x00\x00\x14\x00\x01\x00\x03\x00\x7f\xff\xff\xff\x80\x00\x00\x00-\xc6\xc0\xff\xd29@'
# 26+44+6=86

#msg_test=b'\x00X'
msg_test=b'\x05\xb0'

msg_test_two=b'\x00\x00\x00\x00\x01\x83\x01\xdc'


data_msg=b'\xb8\x13\x00|\x13\x00\xac\x13\x00?\x14\x00 \x14\x00\x15\x14\x00G\x14\x00\x93\x14\x00\xba\x14\x00\xec\x14\x00*\x15\x00\xf9\x14\x00%\x15\x00x\x15\x00t\x15\x00\x92\x15\x00\xc0\x15\x00\xe5\x15\x00\xed\x15\x00\x1d\x16\x00\x87\x16\x00\x88\x16\x00\x88\x16\x00\xc6\x16\x00\xd7\x16\x00&\x17\x00f\x17\x00e\x17\x00\x9e\x17\x00\xe0\x17\x00\xe0\x17\x00\xc7\x17\x00\x14\x18\x00\xb3\x18\x00\x97\x18\x007\x18\x00\x95\x18\x00\xdf\x18\x00\xb1\x18\x00\xa8\x18\x00\xd9\x18\x00\xd5\x18\x00\x0b\x19\x00\x8b\x19\x00o\x19\x00l\x19\x00\xd2\x19\x00\x9f\x19\x00\xb3\x19\x00\x18\x1a\x00\xdd\x19\x00\xfb\x19\x001\x1a\x00c\x1a\x00\xcc\x1a\x00\x90\x1a\x00\x9c\x1a\x00\xda\x1a\x00\xab\x1a\x00\xe8\x1a\x00\xed\x1a\x00\xba\x1a\x00B\x1b\x00\xbc\x1b\x00\xa4\x1b\x00\x9f\x1b\x00\xed\x1b\x00\xc5\x1b\x00\x85\x1b\x00\x17\x1c\x00l\x1c\x00\x82\x1c\x00\x80\x1c\x00E\x1c\x00\xa3\x1c\x00\xe7\x1c\x00\xd2\x1c\x00\xdd\x1c\x00\x06\x1d\x00=\x1d\x00@\x1d\x00\x9c\x1d\x00\xf3\x1d\x00\xdb\x1d\x00\x1e\x1e\x001\x1e\x00\x19\x1e\x00N\x1e\x00d\x1e\x00\xb6\x1e\x00\x00\x1f\x00\x03\x1f\x00\x18\x1f\x00\'\x1f\x00u\x1f\x00\xd0\x1f\x00\xc2\x1f\x00\xa3\x1f\x00\xc3\x1f\x00\x0e \x00P \x00\x85 \x00\x9c \x00| \x00\xa5 \x00\x01!\x00\xf8 \x00\x01!\x00b!\x00j!\x00i!\x00\xf8!\x00\x19"\x00\xc6!\x00\xd4!\x00\xc7!\x00\xeb!\x00""\x00\xfc!\x00\x80"\x00\xe8"\x00\xb4"\x00\xf9"\x00\xe0"\x00\xde"\x00Z#\x00\xfc"\x00\xf7"\x00}#\x00\x82#\x00\x8e#\x00\x83#\x00f#\x00\x87#\x00\xd2#\x00\x05$\x00\xe3#\x00\xec#\x006$\x00@$\x00R$\x00}$\x00\x8f$\x00\xe3$\x00\xfa$\x00\xf1$\x00%%\x00D%\x00\x99%\x00\x84%\x00_%\x00\xd3%\x00\xe4%\x00\xdf%\x00/&\x00/&\x00+&\x00\x86&\x00f&\x00\x10&\x00Z&\x00\xaf&\x00\x01\'\x00"\'\x00\xf9&\x00\n\'\x00\x10\'\x00\x8d\'\x00\xf1\'\x00\x7f\'\x00\xcf\'\x00\x10(\x00\x9f\'\x00\xd2\'\x00\t(\x00\x0c(\x00\x01(\x00#(\x00U(\x00\x16(\x00E(\x00\x89(\x00e(\x00q(\x00x(\x00\x85(\x00\xd4(\x00\xfe(\x00\xd7(\x00\xcd(\x00\xe4(\x00\xfb(\x00/)\x00B)\x00\x88)\x00\xab)\x00f)\x00b)\x00\x81)\x00\xa7)\x00V)\x00p)\x00\xf8)\x00\xa2)\x00\x8c)\x00\x8a)\x00\xcc)\x00F*\x00\xd7)\x00E*\x00\xae*\x008*\x00k*\x00v*\x00\xb5*\x00\xda*\x00\x8e*\x00#+\x00&+\x00\xcb*\x00=+\x00.+\x00J+\x00s+\x00\xfc*\x00y+\x00\xc9+\x00\x92+\x00\xf2+\x00\x88+\x00?+\x00\xe4+\x00\x12,\x00\x06,\x00\xeb+\x00\x03,\x00;,\x00!,\x00\\,\x00u,\x00k,\x00X,\x00\xdd+\x00\x1f,\x00\x83,\x00c,\x00d,\x00E,\x00\\,\x00\x03,\x00\xea+\x00\xb6,\x00\x8a,\x00e,\x00\xa5,\x00\x84,\x00\xad,\x00\x9d,\x00O,\x000,\x00y,\x00\x84,\x00\x12,\x00\',\x00*,\x00.,\x00\x81,\x00",\x00\xcb+\x00\x1f,\x00Q,\x00+,\x00\xdb+\x00\x90+\x00y+\x00\xa9+\x00\xcd+\x00\x86+\x00n+\x00\xad+\x00\x85+\x00>+\x00B+\x00:+\x00J+\x00`+\x00$+\x00\x07+\x000+\x00\x04+\x00\xe5*\x00\x12+\x00\xc0*\x00\xb2*\x00\x06+\x00\xeb*\x00\xc7*\x00{*\x00m*\x00\x9f*\x00\x86*\x00\x9d*\x00\x9f*\x00\xaa*\x00\xa7*\x00T*\x00i*\x007*\x00\xed)\x00\x0e*\x00\x15*\x00b*\x00`*\x002*\x00\x8f*\x00q*\x00\x19*\x00@*\x00X*\x00C*\x00\x0f*\x00\xe0)\x00\xf9)\x00\xfe)\x00\xc4)\x00\xa0)\x00\xb7)\x00\x9a)\x00i)\x00\x9c)\x00~)\x00\x0c)\x005)\x001)\x00\xed(\x00E)\x00\x15)\x00\xcb(\x00\x0e)\x00\xcf(\x00\xd2(\x00\xe9(\x00\x8b(\x00\xa2(\x00w(\x003(\x00m(\x00s(\x00b(\x00%(\x00\x1a(\x00[(\x00>(\x004(\x00\'(\x00\xcf\'\x00\x97\'\x00\xc0\'\x00\xcb\'\x00D\'\x00D\'\x00y\'\x00$\'\x00;\'\x00*\'\x00\xda&\x00\xea&\x00\xa9&\x00\x99&\x00\xd2&\x00\x9d&\x00p&\x00k&\x00d&\x00\x1f&\x00\x01&\x00\x17&\x00\xb0%\x00s%\x00\xb5%\x00\x97%\x00\xf7$\x00\xf9$\x00\x0c%\x00\x92$\x00\xa6$\x00\xca$\x00\x81$\x00d$\x00~$\x00i$\x00\xf7#\x00\xc7#\x00\xe6#\x00\xc5#\x00\xa8#\x00\x8c#\x006#\x005#\x00_#\x002#\x00\x05#\x00\xcf"\x00\x92"\x00>"\x00\xe0!\x00""\x00\x1a"\x00\xa3!\x00\xd7!\x00\xd1!\x00L!\x00O!\x00\x8e!\x006!\x00\xce \x00\xbc \x00\x83 \x00\x96 \x00\xab \x00\x04 \x00\xfd\x1f\x00s \x00\x04 \x00\x8c\x1f\x00\x8f\x1f\x00\xbd\x1f\x00\xbb\x1f\x00K\x1f\x00/\x1f\x00\\\x1f\x00?\x1f\x00^\x1f\x00W\x1f\x00\xd9\x1e\x00\xc3\x1e\x00\xc6\x1e\x00\xa5\x1e\x00f\x1e\x007\x1e\x00u\x1e\x00u\x1e\x00Q\x1e\x00\x14\x1e\x00\xd7\x1d\x00D\x1e\x00}\x1e\x00\xf0\x1d\x00\x8b\x1d\x00U\x1d\x00,\x1d\x00G\x1d\x00\xfd\x1c\x00\xfa\x1c\x00M\x1d\x00s\x1c\x00&\x1c\x00\xb0\x1c\x00,\x1c\x00.\x1c\x00d\x1c\x00\xca\x1b\x00\xe2\x1b\x00\xdd\x1b\x00\\\x1b\x008\x1b\x00\t\x1b\x00\xb0\x1a\x00B\x1a\x00?\x1a\x00i\x1a\x002\x1a\x003\x1a\x00\xe0\x19\x00\x87\x19\x00\xd4\x19\x00'
#len:  1428
#0 1 -125
#476
#1428



def process_chunk(stream):
    (msg_type,
     sync,
     payload_length) = unpack('!cBH',stream[:4])
    #data = stream.read(chunk_size)
    print (len(msg_two))
    print (int.from_bytes(msg_type, byteorder='big'))
    print (int.from_bytes(msg_type, byteorder='little'))
    print (f'Msg type (ASCII): {msg_type} ; {type(msg_type)}')
    print (f'Sync (Decimal): {sync} ; {type(msg_type)}')
    print (f'Payload length (Decimal): {payload_length} ; {type(msg_type)}')

def process_test(stream):
    payload_length = unpack('!H',stream)
    #data = stream.read(chunk_size)
    print (len(msg_test))
    print (f'Payload length (Decimal): {payload_length}')
   
def process_test2(stream):
    (sample_id, num_channels, data_format, data_point) = unpack('!IBbH',stream)
    print (f'sample_id: {sample_id}')
    print (f'num_channels: {num_channels}')
    print (f'data_format: {data_format}')
    print (f'data_point: {data_point}')
    test = data_point * 3 * 1
    print(f'{test}')


if __name__ == "__main__":
	# Do things here
	process_chunk(msg_two)
	process_test(msg_test)
	process_test2(msg_test_two)

	print (int.from_bytes(b'\x05\xb0', byteorder='big'))
	print (int.from_bytes(b'\x05\xb0', byteorder='little'))

	print (int.from_bytes(b'\x00\x00\x00\x00', byteorder='big'))
	print (int.from_bytes(b'\x00\x00\x01\xdc', byteorder='big'))
	print (int.from_bytes(b'\x00\x00\x03\xb8', byteorder='big'))
	print (int.from_bytes(b'\x00\x00\x05\x94', byteorder='big'))
	print (int.from_bytes(b'\x00\x00\x07p', byteorder='big'))
	print (int.from_bytes(b'\x00\x00\tL', byteorder='big'))
	print (int.from_bytes(b'\x00\x00\x0b(', byteorder='big'))

	print (int.from_bytes(b'\x83', byteorder='big'))
	print (int.from_bytes(b'\x01\xdc', byteorder='big'))

	data_msg = []
	#data = [unpack('<476f', data_msg)]
	msg_test_abc=b'\x00\x00\x00\x00\x01\x83\x01\xdc'
	data_msg = unpack('2f', msg_test_abc)
	print('============')
	print(data_msg)
	print(len(data_msg))






