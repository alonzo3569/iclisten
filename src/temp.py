import struct

a = 20
b = 400
s = struct.pack('ii', a, b)
print(s, type(s))
##输出：b'\x14\x00\x00\x00\x90\x01\x00\x00' <class 'bytes'>
print('length: ', len(s))
##输出：length:  8
s2 = struct.unpack('ii', s)
print(s2)
##输出：(20, 400)


	


data_msg=b'\xb8\x13\x00|\x13\x00\xac\x13\x00?\x14\x00 \x14\x00\x15\x14\x00G\x14\x00\x93\x14\x00\xba\x14\x00\xec\x14\x00*\x15\x00\xf9\x14\x00%\x15\x00x\x15\x00t\x15\x00\x92\x15\x00\xc0\x15\x00\xe5\x15\x00\xed\x15\x00\x1d\x16\x00\x87\x16\x00\x88\x16\x00\x88\x16\x00\xc6\x16\x00\xd7\x16\x00&\x17\x00f\x17\x00e\x17\x00\x9e\x17\x00\xe0\x17\x00\xe0\x17\x00\xc7\x17\x00\x14\x18\x00\xb3\x18\x00\x97\x18\x007\x18\x00\x95\x18\x00\xdf\x18\x00\xb1\x18\x00\xa8\x18\x00\xd9\x18\x00\xd5\x18\x00\x0b\x19\x00\x8b\x19\x00o\x19\x00l\x19\x00\xd2\x19\x00\x9f\x19\x00\xb3\x19\x00\x18\x1a\x00\xdd\x19\x00\xfb\x19\x001\x1a\x00c\x1a\x00\xcc\x1a\x00\x90\x1a\x00\x9c\x1a\x00\xda\x1a\x00\xab\x1a\x00\xe8\x1a\x00\xed\x1a\x00\xba\x1a\x00B\x1b\x00\xbc\x1b\x00\xa4\x1b\x00\x9f\x1b\x00\xed\x1b\x00\xc5\x1b\x00\x85\x1b\x00\x17\x1c\x00l\x1c\x00\x82\x1c\x00\x80\x1c\x00E\x1c\x00\xa3\x1c\x00\xe7\x1c\x00\xd2\x1c\x00\xdd\x1c\x00\x06\x1d\x00=\x1d\x00@\x1d\x00\x9c\x1d\x00\xf3\x1d\x00\xdb\x1d\x00\x1e\x1e\x001\x1e\x00\x19\x1e\x00N\x1e\x00d\x1e\x00\xb6\x1e\x00\x00\x1f\x00\x03\x1f\x00\x18\x1f\x00\'\x1f\x00u\x1f\x00\xd0\x1f\x00\xc2\x1f\x00\xa3\x1f\x00\xc3\x1f\x00\x0e \x00P \x00\x85 \x00\x9c \x00| \x00\xa5 \x00\x01!\x00\xf8 \x00\x01!\x00b!\x00j!\x00i!\x00\xf8!\x00\x19"\x00\xc6!\x00\xd4!\x00\xc7!\x00\xeb!\x00""\x00\xfc!\x00\x80"\x00\xe8"\x00\xb4"\x00\xf9"\x00\xe0"\x00\xde"\x00Z#\x00\xfc"\x00\xf7"\x00}#\x00\x82#\x00\x8e#\x00\x83#\x00f#\x00\x87#\x00\xd2#\x00\x05$\x00\xe3#\x00\xec#\x006$\x00@$\x00R$\x00}$\x00\x8f$\x00\xe3$\x00\xfa$\x00\xf1$\x00%%\x00D%\x00\x99%\x00\x84%\x00_%\x00\xd3%\x00\xe4%\x00\xdf%\x00/&\x00/&\x00+&\x00\x86&\x00f&\x00\x10&\x00Z&\x00\xaf&\x00\x01\'\x00"\'\x00\xf9&\x00\n\'\x00\x10\'\x00\x8d\'\x00\xf1\'\x00\x7f\'\x00\xcf\'\x00\x10(\x00\x9f\'\x00\xd2\'\x00\t(\x00\x0c(\x00\x01(\x00#(\x00U(\x00\x16(\x00E(\x00\x89(\x00e(\x00q(\x00x(\x00\x85(\x00\xd4(\x00\xfe(\x00\xd7(\x00\xcd(\x00\xe4(\x00\xfb(\x00/)\x00B)\x00\x88)\x00\xab)\x00f)\x00b)\x00\x81)\x00\xa7)\x00V)\x00p)\x00\xf8)\x00\xa2)\x00\x8c)\x00\x8a)\x00\xcc)\x00F*\x00\xd7)\x00E*\x00\xae*\x008*\x00k*\x00v*\x00\xb5*\x00\xda*\x00\x8e*\x00#+\x00&+\x00\xcb*\x00=+\x00.+\x00J+\x00s+\x00\xfc*\x00y+\x00\xc9+\x00\x92+\x00\xf2+\x00\x88+\x00?+\x00\xe4+\x00\x12,\x00\x06,\x00\xeb+\x00\x03,\x00;,\x00!,\x00\\,\x00u,\x00k,\x00X,\x00\xdd+\x00\x1f,\x00\x83,\x00c,\x00d,\x00E,\x00\\,\x00\x03,\x00\xea+\x00\xb6,\x00\x8a,\x00e,\x00\xa5,\x00\x84,\x00\xad,\x00\x9d,\x00O,\x000,\x00y,\x00\x84,\x00\x12,\x00\',\x00*,\x00.,\x00\x81,\x00",\x00\xcb+\x00\x1f,\x00Q,\x00+,\x00\xdb+\x00\x90+\x00y+\x00\xa9+\x00\xcd+\x00\x86+\x00n+\x00\xad+\x00\x85+\x00>+\x00B+\x00:+\x00J+\x00`+\x00$+\x00\x07+\x000+\x00\x04+\x00\xe5*\x00\x12+\x00\xc0*\x00\xb2*\x00\x06+\x00\xeb*\x00\xc7*\x00{*\x00m*\x00\x9f*\x00\x86*\x00\x9d*\x00\x9f*\x00\xaa*\x00\xa7*\x00T*\x00i*\x007*\x00\xed)\x00\x0e*\x00\x15*\x00b*\x00`*\x002*\x00\x8f*\x00q*\x00\x19*\x00@*\x00X*\x00C*\x00\x0f*\x00\xe0)\x00\xf9)\x00\xfe)\x00\xc4)\x00\xa0)\x00\xb7)\x00\x9a)\x00i)\x00\x9c)\x00~)\x00\x0c)\x005)\x001)\x00\xed(\x00E)\x00\x15)\x00\xcb(\x00\x0e)\x00\xcf(\x00\xd2(\x00\xe9(\x00\x8b(\x00\xa2(\x00w(\x003(\x00m(\x00s(\x00b(\x00%(\x00\x1a(\x00[(\x00>(\x004(\x00\'(\x00\xcf\'\x00\x97\'\x00\xc0\'\x00\xcb\'\x00D\'\x00D\'\x00y\'\x00$\'\x00;\'\x00*\'\x00\xda&\x00\xea&\x00\xa9&\x00\x99&\x00\xd2&\x00\x9d&\x00p&\x00k&\x00d&\x00\x1f&\x00\x01&\x00\x17&\x00\xb0%\x00s%\x00\xb5%\x00\x97%\x00\xf7$\x00\xf9$\x00\x0c%\x00\x92$\x00\xa6$\x00\xca$\x00\x81$\x00d$\x00~$\x00i$\x00\xf7#\x00\xc7#\x00\xe6#\x00\xc5#\x00\xa8#\x00\x8c#\x006#\x005#\x00_#\x002#\x00\x05#\x00\xcf"\x00\x92"\x00>"\x00\xe0!\x00""\x00\x1a"\x00\xa3!\x00\xd7!\x00\xd1!\x00L!\x00O!\x00\x8e!\x006!\x00\xce \x00\xbc \x00\x83 \x00\x96 \x00\xab \x00\x04 \x00\xfd\x1f\x00s \x00\x04 \x00\x8c\x1f\x00\x8f\x1f\x00\xbd\x1f\x00\xbb\x1f\x00K\x1f\x00/\x1f\x00\\\x1f\x00?\x1f\x00^\x1f\x00W\x1f\x00\xd9\x1e\x00\xc3\x1e\x00\xc6\x1e\x00\xa5\x1e\x00f\x1e\x007\x1e\x00u\x1e\x00u\x1e\x00Q\x1e\x00\x14\x1e\x00\xd7\x1d\x00D\x1e\x00}\x1e\x00\xf0\x1d\x00\x8b\x1d\x00U\x1d\x00,\x1d\x00G\x1d\x00\xfd\x1c\x00\xfa\x1c\x00M\x1d\x00s\x1c\x00&\x1c\x00\xb0\x1c\x00,\x1c\x00.\x1c\x00d\x1c\x00\xca\x1b\x00\xe2\x1b\x00\xdd\x1b\x00\\\x1b\x008\x1b\x00\t\x1b\x00\xb0\x1a\x00B\x1a\x00?\x1a\x00i\x1a\x002\x1a\x003\x1a\x00\xe0\x19\x00\x87\x19\x00\xd4\x19\x00'

my_file = open('./volt_one_msg.txt','w')

msg_test_abc=b'\x11\x00\x01\x22\x00\x02\x33\x00\x03\x44\x00\x04\x55\x00\x05'
array = bytearray(msg_test_abc)
print(array, type(array))
print(array[5])
print(len(array))
#for i in array
#	print(i)
for i in range(0,len(array),3):
	msg = array[i:i+3] + b'\x00'
	volt = struct.unpack('<f', msg)
	print(f'{volt}')

print('==============================================================')
array = bytearray(data_msg)
for i in range(0,len(array),3):
	#msg = array[i:i+3] + b'\x00'
	msg = array[i:i+3]
	print(f'{msg}')
	one,two,three = struct.unpack('BBB', msg)
	bits = one + two*256 + three*256*256
	if bits > 8388607:
		bits = bits - 8388607
	print(f'{bits}')
	bits=bits*6/16777216
	my_file.write(f'{bits}\n')

my_file.close()

print(6/16777216)
# 2^24 = 16777216

